// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TriatlonProtocol_v3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Triatlon.Protocol
{

    /// <summary>Holder for reflection information generated from TriatlonProtocol_v3.proto</summary>
    public static partial class TriatlonProtocolV3Reflection
    {

        #region Descriptor
        /// <summary>File descriptor for TriatlonProtocol_v3.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static TriatlonProtocolV3Reflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChlUcmlhdGxvblByb3RvY29sX3YzLnByb3RvEhF0cmlhdGxvbi5wcm90b2Nv",
                  "bCIfCghTdHJpbmdTUxITCgtuYW1lQXJiaXRydRgBIAEoCSIbCgdMb25nZ1NT",
                  "EhAKCGlkRW50aXR5GAEgASgEIogBCgdBcmJpdHJ1EgoKAmlkGAEgASgEEhEK",
                  "CWZpcnN0bmFtZRgCIAEoCRIQCghsYXN0bmFtZRgDIAEoCRINCgVlbWFpbBgE",
                  "IAEoCRIQCgh1c2VyTmFtZRgFIAEoCRIQCghwYXNzd29yZBgGIAEoCRIZChFy",
                  "ZXNwb25zYWJpbF9wcm9iYRgHIAEoBCJOCgtQYXJ0aWNpcGFudBIKCgJpZBgB",
                  "IAEoCRIRCglmaXJzdG5hbWUYAiABKAkSEAoIbGFzdG5hbWUYAyABKAkSDgoG",
                  "dmFyc3RhGAQgASgJIlIKDlBhcnRpY2lwYW50RFRPEgoKAmlkGAEgASgEEhEK",
                  "CWZpcnN0bmFtZRgCIAEoCRIQCghsYXN0bmFtZRgDIAEoCRIPCgdwdW5jdGFq",
                  "GAQgASgNIjcKBVByb2JhEgoKAmlkGAEgASgEEhAKCHRpcHByb2JhGAIgASgJ",
                  "EhAKCGRpc3RhbnRhGAMgASgNIokBCghSZXp1bHRhdBIKCgJpZBgBIAEoBBIn",
                  "CgVwcm9iYRgCIAEoCzIYLnRyaWF0bG9uLnByb3RvY29sLlByb2JhEjMKC3Bh",
                  "cnRpY2lwYW50GAMgASgLMh4udHJpYXRsb24ucHJvdG9jb2wuUGFydGljaXBh",
                  "bnQSEwoLbnVtYXJwdW5jdGUYBCABKA0i8AQKD1RyaWF0bG9uUmVxdWVzdBI1",
                  "CgR0eXBlGAEgASgOMicudHJpYXRsb24ucHJvdG9jb2wuVHJpYXRsb25SZXF1",
                  "ZXN0LlR5cGUSLQoHYXJiaXRydRgCIAEoCzIaLnRyaWF0bG9uLnByb3RvY29s",
                  "LkFyYml0cnVIABI1CgtwYXJ0aWNpcGFudBgDIAEoCzIeLnRyaWF0bG9uLnBy",
                  "b3RvY29sLlBhcnRpY2lwYW50SAASOwoOcGFydGljaXBhbnREVE8YBCABKAsy",
                  "IS50cmlhdGxvbi5wcm90b2NvbC5QYXJ0aWNpcGFudERUT0gAEikKBXByb2Jh",
                  "GAUgASgLMhgudHJpYXRsb24ucHJvdG9jb2wuUHJvYmFIABIvCghyZXp1bHRh",
                  "dBgGIAEoCzIbLnRyaWF0bG9uLnByb3RvY29sLlJlenVsdGF0SAASMgoLbmFt",
                  "ZUFyYml0cnUYByABKAsyGy50cmlhdGxvbi5wcm90b2NvbC5TdHJpbmdTU0gA",
                  "Ei4KCGlkRW50aXR5GAggASgLMhoudHJpYXRsb24ucHJvdG9jb2wuTG9uZ2dT",
                  "U0gAIrcBCgRUeXBlEgoKBlVua293bhAAEgkKBUxvZ2luEAESCgoGTG9nb3V0",
                  "EAISEAoMU2VuZFJlenVsdGF0EAMSFAoQZ2V0QXJiaXRydWJ5TmFtZRAEEhYK",
                  "EmdldFBhcnRpY2lwYW50aURUTxAFEhcKE2dldFByb2JhQXJiaXRydWJ5SWQQ",
                  "BhIRCg1maWx0ZXJieVByb2JhEAcSIAocZmluZFBhcnRpY2lwYW50QnlOdW1l",
                  "UHJlbnVtZRAIQgkKB3BheWxvYWQizAQKEFRyaWF0bG9uUmVzcG9uc2USNgoE",
                  "dHlwZRgBIAEoDjIoLnRyaWF0bG9uLnByb3RvY29sLlRyaWF0bG9uUmVzcG9u",
                  "c2UuVHlwZRINCgVlcnJvchgCIAEoCRItCghyZXp1bHRhdBgDIAEoCzIbLnRy",
                  "aWF0bG9uLnByb3RvY29sLlJlenVsdGF0EjsKEHBhcnRpY2lwYW50aWlEVE8Y",
                  "BCADKAsyIS50cmlhdGxvbi5wcm90b2NvbC5QYXJ0aWNpcGFudERUTxIrCgdh",
                  "cmJpdHJ1GAUgASgLMhoudHJpYXRsb24ucHJvdG9jb2wuQXJiaXRydRIuCgly",
                  "ZXp1bHRhdGUYBiADKAsyGy50cmlhdGxvbi5wcm90b2NvbC5SZXp1bHRhdBIn",
                  "CgVwcm9iYRgHIAEoCzIYLnRyaWF0bG9uLnByb3RvY29sLlByb2JhEjMKC3Bh",
                  "cnRpY2lwYW50GAggASgLMh4udHJpYXRsb24ucHJvdG9jb2wuUGFydGljaXBh",
                  "bnQiyQEKBFR5cGUSCwoHVW5rbm93bhAAEgYKAk9rEAESCQoFRXJyb3IQAhIU",
                  "ChByZXp1bHRhdFJlY2VpdmVkEAMSFAoQZ2V0QXJiaXRydWJ5TmFtZRAEEhYK",
                  "EmdldFBhcnRpY2lwYW50aURUTxAFEhEKDWZpbHRlcmJ5UHJvYmEQBhIXChNn",
                  "ZXRQcm9iYUFyYml0cnVieUlkEAcSDwoLbmV3UmV6dWx0YXQQCBIgChxmaW5k",
                  "UGFydGljaXBhbnRCeU51bWVQcmVudW1lEAlCNwoidHJpYXRsb24ubmV0d29y",
                  "ay5wcm90b2J1ZmZwcm90b2NvbEIRVHJpYXRsb25Qcm90b2J1ZnNiBnByb3Rv",
                  "Mw=="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.StringSS), global::Triatlon.Protocol.StringSS.Parser, new[]{ "NameArbitru" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.LonggSS), global::Triatlon.Protocol.LonggSS.Parser, new[]{ "IdEntity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.Arbitru), global::Triatlon.Protocol.Arbitru.Parser, new[]{ "Id", "Firstname", "Lastname", "Email", "UserName", "Password", "ResponsabilProba" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.Participant), global::Triatlon.Protocol.Participant.Parser, new[]{ "Id", "Firstname", "Lastname", "Varsta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.ParticipantDTO), global::Triatlon.Protocol.ParticipantDTO.Parser, new[]{ "Id", "Firstname", "Lastname", "Punctaj" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.Proba), global::Triatlon.Protocol.Proba.Parser, new[]{ "Id", "Tipproba", "Distanta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.Rezultat), global::Triatlon.Protocol.Rezultat.Parser, new[]{ "Id", "Proba", "Participant", "Numarpuncte" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.TriatlonRequest), global::Triatlon.Protocol.TriatlonRequest.Parser, new[]{ "Type", "Arbitru", "Participant", "ParticipantDTO", "Proba", "Rezultat", "NameArbitru", "IdEntity" }, new[]{ "Payload" }, new[]{ typeof(global::Triatlon.Protocol.TriatlonRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Triatlon.Protocol.TriatlonResponse), global::Triatlon.Protocol.TriatlonResponse.Parser, new[]{ "Type", "Error", "Rezultat", "ParticipantiiDTO", "Arbitru", "Rezultate", "Proba", "Participant" }, null, new[]{ typeof(global::Triatlon.Protocol.TriatlonResponse.Types.Type) }, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class StringSS : pb::IMessage<StringSS>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<StringSS> _parser = new pb::MessageParser<StringSS>(() => new StringSS());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StringSS> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringSS()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringSS(StringSS other) : this()
        {
            nameArbitru_ = other.nameArbitru_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringSS Clone()
        {
            return new StringSS(this);
        }

        /// <summary>Field number for the "nameArbitru" field.</summary>
        public const int NameArbitruFieldNumber = 1;
        private string nameArbitru_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NameArbitru
        {
            get { return nameArbitru_; }
            set
            {
                nameArbitru_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as StringSS);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StringSS other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (NameArbitru != other.NameArbitru) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (NameArbitru.Length != 0) hash ^= NameArbitru.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (NameArbitru.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NameArbitru);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (NameArbitru.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(NameArbitru);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (NameArbitru.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(NameArbitru);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StringSS other)
        {
            if (other == null)
            {
                return;
            }
            if (other.NameArbitru.Length != 0)
            {
                NameArbitru = other.NameArbitru;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NameArbitru = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            NameArbitru = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class LonggSS : pb::IMessage<LonggSS>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<LonggSS> _parser = new pb::MessageParser<LonggSS>(() => new LonggSS());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LonggSS> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LonggSS()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LonggSS(LonggSS other) : this()
        {
            idEntity_ = other.idEntity_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LonggSS Clone()
        {
            return new LonggSS(this);
        }

        /// <summary>Field number for the "idEntity" field.</summary>
        public const int IdEntityFieldNumber = 1;
        private ulong idEntity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong IdEntity
        {
            get { return idEntity_; }
            set
            {
                idEntity_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as LonggSS);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LonggSS other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (IdEntity != other.IdEntity) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (IdEntity != 0UL) hash ^= IdEntity.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (IdEntity != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(IdEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (IdEntity != 0UL)
            {
                output.WriteRawTag(8);
                output.WriteUInt64(IdEntity);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (IdEntity != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IdEntity);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LonggSS other)
        {
            if (other == null)
            {
                return;
            }
            if (other.IdEntity != 0UL)
            {
                IdEntity = other.IdEntity;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdEntity = input.ReadUInt64();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            IdEntity = input.ReadUInt64();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class Arbitru : pb::IMessage<Arbitru>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Arbitru> _parser = new pb::MessageParser<Arbitru>(() => new Arbitru());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Arbitru> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Arbitru()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Arbitru(Arbitru other) : this()
        {
            id_ = other.id_;
            firstname_ = other.firstname_;
            lastname_ = other.lastname_;
            email_ = other.email_;
            userName_ = other.userName_;
            password_ = other.password_;
            responsabilProba_ = other.responsabilProba_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Arbitru Clone()
        {
            return new Arbitru(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private ulong id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "firstname" field.</summary>
        public const int FirstnameFieldNumber = 2;
        private string firstname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Firstname
        {
            get { return firstname_; }
            set
            {
                firstname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "lastname" field.</summary>
        public const int LastnameFieldNumber = 3;
        private string lastname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Lastname
        {
            get { return lastname_; }
            set
            {
                lastname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "email" field.</summary>
        public const int EmailFieldNumber = 4;
        private string email_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email
        {
            get { return email_; }
            set
            {
                email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "userName" field.</summary>
        public const int UserNameFieldNumber = 5;
        private string userName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserName
        {
            get { return userName_; }
            set
            {
                userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 6;
        private string password_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Password
        {
            get { return password_; }
            set
            {
                password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "responsabil_proba" field.</summary>
        public const int ResponsabilProbaFieldNumber = 7;
        private ulong responsabilProba_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ResponsabilProba
        {
            get { return responsabilProba_; }
            set
            {
                responsabilProba_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Arbitru);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Arbitru other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Firstname != other.Firstname) return false;
            if (Lastname != other.Lastname) return false;
            if (Email != other.Email) return false;
            if (UserName != other.UserName) return false;
            if (Password != other.Password) return false;
            if (ResponsabilProba != other.ResponsabilProba) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id != 0UL) hash ^= Id.GetHashCode();
            if (Firstname.Length != 0) hash ^= Firstname.GetHashCode();
            if (Lastname.Length != 0) hash ^= Lastname.GetHashCode();
            if (Email.Length != 0) hash ^= Email.GetHashCode();
            if (UserName.Length != 0) hash ^= UserName.GetHashCode();
            if (Password.Length != 0) hash ^= Password.GetHashCode();
            if (ResponsabilProba != 0UL) hash ^= ResponsabilProba.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Firstname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Firstname);
      }
      if (Lastname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lastname);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (ResponsabilProba != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(ResponsabilProba);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Id != 0UL)
            {
                output.WriteRawTag(8);
                output.WriteUInt64(Id);
            }
            if (Firstname.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Firstname);
            }
            if (Lastname.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Lastname);
            }
            if (Email.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(Email);
            }
            if (UserName.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(UserName);
            }
            if (Password.Length != 0)
            {
                output.WriteRawTag(50);
                output.WriteString(Password);
            }
            if (ResponsabilProba != 0UL)
            {
                output.WriteRawTag(56);
                output.WriteUInt64(ResponsabilProba);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
            }
            if (Firstname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Firstname);
            }
            if (Lastname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Lastname);
            }
            if (Email.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
            }
            if (UserName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
            }
            if (Password.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
            }
            if (ResponsabilProba != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ResponsabilProba);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Arbitru other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id != 0UL)
            {
                Id = other.Id;
            }
            if (other.Firstname.Length != 0)
            {
                Firstname = other.Firstname;
            }
            if (other.Lastname.Length != 0)
            {
                Lastname = other.Lastname;
            }
            if (other.Email.Length != 0)
            {
                Email = other.Email;
            }
            if (other.UserName.Length != 0)
            {
                UserName = other.UserName;
            }
            if (other.Password.Length != 0)
            {
                Password = other.Password;
            }
            if (other.ResponsabilProba != 0UL)
            {
                ResponsabilProba = other.ResponsabilProba;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Firstname = input.ReadString();
            break;
          }
          case 26: {
            Lastname = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            UserName = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 56: {
            ResponsabilProba = input.ReadUInt64();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Id = input.ReadUInt64();
                            break;
                        }
                    case 18:
                        {
                            Firstname = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Lastname = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            Email = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            UserName = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            Password = input.ReadString();
                            break;
                        }
                    case 56:
                        {
                            ResponsabilProba = input.ReadUInt64();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class Participant : pb::IMessage<Participant>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Participant> _parser = new pb::MessageParser<Participant>(() => new Participant());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Participant> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Participant()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Participant(Participant other) : this()
        {
            id_ = other.id_;
            firstname_ = other.firstname_;
            lastname_ = other.lastname_;
            varsta_ = other.varsta_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Participant Clone()
        {
            return new Participant(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "firstname" field.</summary>
        public const int FirstnameFieldNumber = 2;
        private string firstname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Firstname
        {
            get { return firstname_; }
            set
            {
                firstname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "lastname" field.</summary>
        public const int LastnameFieldNumber = 3;
        private string lastname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Lastname
        {
            get { return lastname_; }
            set
            {
                lastname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "varsta" field.</summary>
        public const int VarstaFieldNumber = 4;
        private string varsta_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Varsta
        {
            get { return varsta_; }
            set
            {
                varsta_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Participant);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Participant other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Firstname != other.Firstname) return false;
            if (Lastname != other.Lastname) return false;
            if (Varsta != other.Varsta) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (Firstname.Length != 0) hash ^= Firstname.GetHashCode();
            if (Lastname.Length != 0) hash ^= Lastname.GetHashCode();
            if (Varsta.Length != 0) hash ^= Varsta.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Firstname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Firstname);
      }
      if (Lastname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lastname);
      }
      if (Varsta.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Varsta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (Firstname.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Firstname);
            }
            if (Lastname.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Lastname);
            }
            if (Varsta.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(Varsta);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (Firstname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Firstname);
            }
            if (Lastname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Lastname);
            }
            if (Varsta.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Varsta);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Participant other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.Firstname.Length != 0)
            {
                Firstname = other.Firstname;
            }
            if (other.Lastname.Length != 0)
            {
                Lastname = other.Lastname;
            }
            if (other.Varsta.Length != 0)
            {
                Varsta = other.Varsta;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Firstname = input.ReadString();
            break;
          }
          case 26: {
            Lastname = input.ReadString();
            break;
          }
          case 34: {
            Varsta = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Firstname = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Lastname = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            Varsta = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class ParticipantDTO : pb::IMessage<ParticipantDTO>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<ParticipantDTO> _parser = new pb::MessageParser<ParticipantDTO>(() => new ParticipantDTO());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ParticipantDTO> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ParticipantDTO()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ParticipantDTO(ParticipantDTO other) : this()
        {
            id_ = other.id_;
            firstname_ = other.firstname_;
            lastname_ = other.lastname_;
            punctaj_ = other.punctaj_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ParticipantDTO Clone()
        {
            return new ParticipantDTO(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private ulong id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "firstname" field.</summary>
        public const int FirstnameFieldNumber = 2;
        private string firstname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Firstname
        {
            get { return firstname_; }
            set
            {
                firstname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "lastname" field.</summary>
        public const int LastnameFieldNumber = 3;
        private string lastname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Lastname
        {
            get { return lastname_; }
            set
            {
                lastname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "punctaj" field.</summary>
        public const int PunctajFieldNumber = 4;
        private uint punctaj_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Punctaj
        {
            get { return punctaj_; }
            set
            {
                punctaj_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ParticipantDTO);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ParticipantDTO other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Firstname != other.Firstname) return false;
            if (Lastname != other.Lastname) return false;
            if (Punctaj != other.Punctaj) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id != 0UL) hash ^= Id.GetHashCode();
            if (Firstname.Length != 0) hash ^= Firstname.GetHashCode();
            if (Lastname.Length != 0) hash ^= Lastname.GetHashCode();
            if (Punctaj != 0) hash ^= Punctaj.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Firstname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Firstname);
      }
      if (Lastname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lastname);
      }
      if (Punctaj != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Punctaj);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Id != 0UL)
            {
                output.WriteRawTag(8);
                output.WriteUInt64(Id);
            }
            if (Firstname.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Firstname);
            }
            if (Lastname.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Lastname);
            }
            if (Punctaj != 0)
            {
                output.WriteRawTag(32);
                output.WriteUInt32(Punctaj);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
            }
            if (Firstname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Firstname);
            }
            if (Lastname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Lastname);
            }
            if (Punctaj != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Punctaj);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ParticipantDTO other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id != 0UL)
            {
                Id = other.Id;
            }
            if (other.Firstname.Length != 0)
            {
                Firstname = other.Firstname;
            }
            if (other.Lastname.Length != 0)
            {
                Lastname = other.Lastname;
            }
            if (other.Punctaj != 0)
            {
                Punctaj = other.Punctaj;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Firstname = input.ReadString();
            break;
          }
          case 26: {
            Lastname = input.ReadString();
            break;
          }
          case 32: {
            Punctaj = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Id = input.ReadUInt64();
                            break;
                        }
                    case 18:
                        {
                            Firstname = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Lastname = input.ReadString();
                            break;
                        }
                    case 32:
                        {
                            Punctaj = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class Proba : pb::IMessage<Proba>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Proba> _parser = new pb::MessageParser<Proba>(() => new Proba());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Proba> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Proba()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Proba(Proba other) : this()
        {
            id_ = other.id_;
            tipproba_ = other.tipproba_;
            distanta_ = other.distanta_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Proba Clone()
        {
            return new Proba(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private ulong id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "tipproba" field.</summary>
        public const int TipprobaFieldNumber = 2;
        private string tipproba_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Tipproba
        {
            get { return tipproba_; }
            set
            {
                tipproba_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "distanta" field.</summary>
        public const int DistantaFieldNumber = 3;
        private uint distanta_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Distanta
        {
            get { return distanta_; }
            set
            {
                distanta_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Proba);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Proba other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Tipproba != other.Tipproba) return false;
            if (Distanta != other.Distanta) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id != 0UL) hash ^= Id.GetHashCode();
            if (Tipproba.Length != 0) hash ^= Tipproba.GetHashCode();
            if (Distanta != 0) hash ^= Distanta.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Tipproba.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tipproba);
      }
      if (Distanta != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Distanta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Id != 0UL)
            {
                output.WriteRawTag(8);
                output.WriteUInt64(Id);
            }
            if (Tipproba.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Tipproba);
            }
            if (Distanta != 0)
            {
                output.WriteRawTag(24);
                output.WriteUInt32(Distanta);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
            }
            if (Tipproba.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Tipproba);
            }
            if (Distanta != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distanta);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Proba other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id != 0UL)
            {
                Id = other.Id;
            }
            if (other.Tipproba.Length != 0)
            {
                Tipproba = other.Tipproba;
            }
            if (other.Distanta != 0)
            {
                Distanta = other.Distanta;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Tipproba = input.ReadString();
            break;
          }
          case 24: {
            Distanta = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Id = input.ReadUInt64();
                            break;
                        }
                    case 18:
                        {
                            Tipproba = input.ReadString();
                            break;
                        }
                    case 24:
                        {
                            Distanta = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class Rezultat : pb::IMessage<Rezultat>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Rezultat> _parser = new pb::MessageParser<Rezultat>(() => new Rezultat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Rezultat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rezultat()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rezultat(Rezultat other) : this()
        {
            id_ = other.id_;
            proba_ = other.proba_ != null ? other.proba_.Clone() : null;
            participant_ = other.participant_ != null ? other.participant_.Clone() : null;
            numarpuncte_ = other.numarpuncte_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rezultat Clone()
        {
            return new Rezultat(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private ulong id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "proba" field.</summary>
        public const int ProbaFieldNumber = 2;
        private global::Triatlon.Protocol.Proba proba_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Proba Proba
        {
            get { return proba_; }
            set
            {
                proba_ = value;
            }
        }

        /// <summary>Field number for the "participant" field.</summary>
        public const int ParticipantFieldNumber = 3;
        private global::Triatlon.Protocol.Participant participant_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Participant Participant
        {
            get { return participant_; }
            set
            {
                participant_ = value;
            }
        }

        /// <summary>Field number for the "numarpuncte" field.</summary>
        public const int NumarpuncteFieldNumber = 4;
        private uint numarpuncte_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Numarpuncte
        {
            get { return numarpuncte_; }
            set
            {
                numarpuncte_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Rezultat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Rezultat other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (!object.Equals(Proba, other.Proba)) return false;
            if (!object.Equals(Participant, other.Participant)) return false;
            if (Numarpuncte != other.Numarpuncte) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id != 0UL) hash ^= Id.GetHashCode();
            if (proba_ != null) hash ^= Proba.GetHashCode();
            if (participant_ != null) hash ^= Participant.GetHashCode();
            if (Numarpuncte != 0) hash ^= Numarpuncte.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (proba_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Proba);
      }
      if (participant_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Participant);
      }
      if (Numarpuncte != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Numarpuncte);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Id != 0UL)
            {
                output.WriteRawTag(8);
                output.WriteUInt64(Id);
            }
            if (proba_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Proba);
            }
            if (participant_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Participant);
            }
            if (Numarpuncte != 0)
            {
                output.WriteRawTag(32);
                output.WriteUInt32(Numarpuncte);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
            }
            if (proba_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proba);
            }
            if (participant_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
            }
            if (Numarpuncte != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Numarpuncte);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Rezultat other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id != 0UL)
            {
                Id = other.Id;
            }
            if (other.proba_ != null)
            {
                if (proba_ == null)
                {
                    Proba = new global::Triatlon.Protocol.Proba();
                }
                Proba.MergeFrom(other.Proba);
            }
            if (other.participant_ != null)
            {
                if (participant_ == null)
                {
                    Participant = new global::Triatlon.Protocol.Participant();
                }
                Participant.MergeFrom(other.Participant);
            }
            if (other.Numarpuncte != 0)
            {
                Numarpuncte = other.Numarpuncte;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            if (proba_ == null) {
              Proba = new global::Triatlon.Protocol.Proba();
            }
            input.ReadMessage(Proba);
            break;
          }
          case 26: {
            if (participant_ == null) {
              Participant = new global::Triatlon.Protocol.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 32: {
            Numarpuncte = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Id = input.ReadUInt64();
                            break;
                        }
                    case 18:
                        {
                            if (proba_ == null)
                            {
                                Proba = new global::Triatlon.Protocol.Proba();
                            }
                            input.ReadMessage(Proba);
                            break;
                        }
                    case 26:
                        {
                            if (participant_ == null)
                            {
                                Participant = new global::Triatlon.Protocol.Participant();
                            }
                            input.ReadMessage(Participant);
                            break;
                        }
                    case 32:
                        {
                            Numarpuncte = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class TriatlonRequest : pb::IMessage<TriatlonRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<TriatlonRequest> _parser = new pb::MessageParser<TriatlonRequest>(() => new TriatlonRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TriatlonRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriatlonRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriatlonRequest(TriatlonRequest other) : this()
        {
            type_ = other.type_;
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.Arbitru:
                    Arbitru = other.Arbitru.Clone();
                    break;
                case PayloadOneofCase.Participant:
                    Participant = other.Participant.Clone();
                    break;
                case PayloadOneofCase.ParticipantDTO:
                    ParticipantDTO = other.ParticipantDTO.Clone();
                    break;
                case PayloadOneofCase.Proba:
                    Proba = other.Proba.Clone();
                    break;
                case PayloadOneofCase.Rezultat:
                    Rezultat = other.Rezultat.Clone();
                    break;
                case PayloadOneofCase.NameArbitru:
                    NameArbitru = other.NameArbitru.Clone();
                    break;
                case PayloadOneofCase.IdEntity:
                    IdEntity = other.IdEntity.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriatlonRequest Clone()
        {
            return new TriatlonRequest(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Triatlon.Protocol.TriatlonRequest.Types.Type type_ = global::Triatlon.Protocol.TriatlonRequest.Types.Type.Unkown;
        /// <summary>
        /// Identifies which request is filled in.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.TriatlonRequest.Types.Type Type
        {
            get { return type_; }
            set
            {
                type_ = value;
            }
        }

        /// <summary>Field number for the "arbitru" field.</summary>
        public const int ArbitruFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Arbitru Arbitru
        {
            get { return payloadCase_ == PayloadOneofCase.Arbitru ? (global::Triatlon.Protocol.Arbitru)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Arbitru;
            }
        }

        /// <summary>Field number for the "participant" field.</summary>
        public const int ParticipantFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Participant Participant
        {
            get { return payloadCase_ == PayloadOneofCase.Participant ? (global::Triatlon.Protocol.Participant)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Participant;
            }
        }

        /// <summary>Field number for the "participantDTO" field.</summary>
        public const int ParticipantDTOFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.ParticipantDTO ParticipantDTO
        {
            get { return payloadCase_ == PayloadOneofCase.ParticipantDTO ? (global::Triatlon.Protocol.ParticipantDTO)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ParticipantDTO;
            }
        }

        /// <summary>Field number for the "proba" field.</summary>
        public const int ProbaFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Proba Proba
        {
            get { return payloadCase_ == PayloadOneofCase.Proba ? (global::Triatlon.Protocol.Proba)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Proba;
            }
        }

        /// <summary>Field number for the "rezultat" field.</summary>
        public const int RezultatFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Rezultat Rezultat
        {
            get { return payloadCase_ == PayloadOneofCase.Rezultat ? (global::Triatlon.Protocol.Rezultat)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Rezultat;
            }
        }

        /// <summary>Field number for the "nameArbitru" field.</summary>
        public const int NameArbitruFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.StringSS NameArbitru
        {
            get { return payloadCase_ == PayloadOneofCase.NameArbitru ? (global::Triatlon.Protocol.StringSS)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NameArbitru;
            }
        }

        /// <summary>Field number for the "idEntity" field.</summary>
        public const int IdEntityFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.LonggSS IdEntity
        {
            get { return payloadCase_ == PayloadOneofCase.IdEntity ? (global::Triatlon.Protocol.LonggSS)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IdEntity;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            Arbitru = 2,
            Participant = 3,
            ParticipantDTO = 4,
            Proba = 5,
            Rezultat = 6,
            NameArbitru = 7,
            IdEntity = 8,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as TriatlonRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TriatlonRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            if (!object.Equals(Arbitru, other.Arbitru)) return false;
            if (!object.Equals(Participant, other.Participant)) return false;
            if (!object.Equals(ParticipantDTO, other.ParticipantDTO)) return false;
            if (!object.Equals(Proba, other.Proba)) return false;
            if (!object.Equals(Rezultat, other.Rezultat)) return false;
            if (!object.Equals(NameArbitru, other.NameArbitru)) return false;
            if (!object.Equals(IdEntity, other.IdEntity)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Type != global::Triatlon.Protocol.TriatlonRequest.Types.Type.Unkown) hash ^= Type.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Arbitru) hash ^= Arbitru.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Participant) hash ^= Participant.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.ParticipantDTO) hash ^= ParticipantDTO.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Proba) hash ^= Proba.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Rezultat) hash ^= Rezultat.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.NameArbitru) hash ^= NameArbitru.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.IdEntity) hash ^= IdEntity.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Type != global::Triatlon.Protocol.TriatlonRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Arbitru) {
        output.WriteRawTag(18);
        output.WriteMessage(Arbitru);
      }
      if (payloadCase_ == PayloadOneofCase.Participant) {
        output.WriteRawTag(26);
        output.WriteMessage(Participant);
      }
      if (payloadCase_ == PayloadOneofCase.ParticipantDTO) {
        output.WriteRawTag(34);
        output.WriteMessage(ParticipantDTO);
      }
      if (payloadCase_ == PayloadOneofCase.Proba) {
        output.WriteRawTag(42);
        output.WriteMessage(Proba);
      }
      if (payloadCase_ == PayloadOneofCase.Rezultat) {
        output.WriteRawTag(50);
        output.WriteMessage(Rezultat);
      }
      if (payloadCase_ == PayloadOneofCase.NameArbitru) {
        output.WriteRawTag(58);
        output.WriteMessage(NameArbitru);
      }
      if (payloadCase_ == PayloadOneofCase.IdEntity) {
        output.WriteRawTag(66);
        output.WriteMessage(IdEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Type != global::Triatlon.Protocol.TriatlonRequest.Types.Type.Unkown)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (payloadCase_ == PayloadOneofCase.Arbitru)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Arbitru);
            }
            if (payloadCase_ == PayloadOneofCase.Participant)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Participant);
            }
            if (payloadCase_ == PayloadOneofCase.ParticipantDTO)
            {
                output.WriteRawTag(34);
                output.WriteMessage(ParticipantDTO);
            }
            if (payloadCase_ == PayloadOneofCase.Proba)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Proba);
            }
            if (payloadCase_ == PayloadOneofCase.Rezultat)
            {
                output.WriteRawTag(50);
                output.WriteMessage(Rezultat);
            }
            if (payloadCase_ == PayloadOneofCase.NameArbitru)
            {
                output.WriteRawTag(58);
                output.WriteMessage(NameArbitru);
            }
            if (payloadCase_ == PayloadOneofCase.IdEntity)
            {
                output.WriteRawTag(66);
                output.WriteMessage(IdEntity);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Type != global::Triatlon.Protocol.TriatlonRequest.Types.Type.Unkown)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (payloadCase_ == PayloadOneofCase.Arbitru)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arbitru);
            }
            if (payloadCase_ == PayloadOneofCase.Participant)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
            }
            if (payloadCase_ == PayloadOneofCase.ParticipantDTO)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParticipantDTO);
            }
            if (payloadCase_ == PayloadOneofCase.Proba)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proba);
            }
            if (payloadCase_ == PayloadOneofCase.Rezultat)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rezultat);
            }
            if (payloadCase_ == PayloadOneofCase.NameArbitru)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NameArbitru);
            }
            if (payloadCase_ == PayloadOneofCase.IdEntity)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdEntity);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TriatlonRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != global::Triatlon.Protocol.TriatlonRequest.Types.Type.Unkown)
            {
                Type = other.Type;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.Arbitru:
                    if (Arbitru == null)
                    {
                        Arbitru = new global::Triatlon.Protocol.Arbitru();
                    }
                    Arbitru.MergeFrom(other.Arbitru);
                    break;
                case PayloadOneofCase.Participant:
                    if (Participant == null)
                    {
                        Participant = new global::Triatlon.Protocol.Participant();
                    }
                    Participant.MergeFrom(other.Participant);
                    break;
                case PayloadOneofCase.ParticipantDTO:
                    if (ParticipantDTO == null)
                    {
                        ParticipantDTO = new global::Triatlon.Protocol.ParticipantDTO();
                    }
                    ParticipantDTO.MergeFrom(other.ParticipantDTO);
                    break;
                case PayloadOneofCase.Proba:
                    if (Proba == null)
                    {
                        Proba = new global::Triatlon.Protocol.Proba();
                    }
                    Proba.MergeFrom(other.Proba);
                    break;
                case PayloadOneofCase.Rezultat:
                    if (Rezultat == null)
                    {
                        Rezultat = new global::Triatlon.Protocol.Rezultat();
                    }
                    Rezultat.MergeFrom(other.Rezultat);
                    break;
                case PayloadOneofCase.NameArbitru:
                    if (NameArbitru == null)
                    {
                        NameArbitru = new global::Triatlon.Protocol.StringSS();
                    }
                    NameArbitru.MergeFrom(other.NameArbitru);
                    break;
                case PayloadOneofCase.IdEntity:
                    if (IdEntity == null)
                    {
                        IdEntity = new global::Triatlon.Protocol.LonggSS();
                    }
                    IdEntity.MergeFrom(other.IdEntity);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Triatlon.Protocol.TriatlonRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Triatlon.Protocol.Arbitru subBuilder = new global::Triatlon.Protocol.Arbitru();
            if (payloadCase_ == PayloadOneofCase.Arbitru) {
              subBuilder.MergeFrom(Arbitru);
            }
            input.ReadMessage(subBuilder);
            Arbitru = subBuilder;
            break;
          }
          case 26: {
            global::Triatlon.Protocol.Participant subBuilder = new global::Triatlon.Protocol.Participant();
            if (payloadCase_ == PayloadOneofCase.Participant) {
              subBuilder.MergeFrom(Participant);
            }
            input.ReadMessage(subBuilder);
            Participant = subBuilder;
            break;
          }
          case 34: {
            global::Triatlon.Protocol.ParticipantDTO subBuilder = new global::Triatlon.Protocol.ParticipantDTO();
            if (payloadCase_ == PayloadOneofCase.ParticipantDTO) {
              subBuilder.MergeFrom(ParticipantDTO);
            }
            input.ReadMessage(subBuilder);
            ParticipantDTO = subBuilder;
            break;
          }
          case 42: {
            global::Triatlon.Protocol.Proba subBuilder = new global::Triatlon.Protocol.Proba();
            if (payloadCase_ == PayloadOneofCase.Proba) {
              subBuilder.MergeFrom(Proba);
            }
            input.ReadMessage(subBuilder);
            Proba = subBuilder;
            break;
          }
          case 50: {
            global::Triatlon.Protocol.Rezultat subBuilder = new global::Triatlon.Protocol.Rezultat();
            if (payloadCase_ == PayloadOneofCase.Rezultat) {
              subBuilder.MergeFrom(Rezultat);
            }
            input.ReadMessage(subBuilder);
            Rezultat = subBuilder;
            break;
          }
          case 58: {
            global::Triatlon.Protocol.StringSS subBuilder = new global::Triatlon.Protocol.StringSS();
            if (payloadCase_ == PayloadOneofCase.NameArbitru) {
              subBuilder.MergeFrom(NameArbitru);
            }
            input.ReadMessage(subBuilder);
            NameArbitru = subBuilder;
            break;
          }
          case 66: {
            global::Triatlon.Protocol.LonggSS subBuilder = new global::Triatlon.Protocol.LonggSS();
            if (payloadCase_ == PayloadOneofCase.IdEntity) {
              subBuilder.MergeFrom(IdEntity);
            }
            input.ReadMessage(subBuilder);
            IdEntity = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Type = (global::Triatlon.Protocol.TriatlonRequest.Types.Type)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            global::Triatlon.Protocol.Arbitru subBuilder = new global::Triatlon.Protocol.Arbitru();
                            if (payloadCase_ == PayloadOneofCase.Arbitru)
                            {
                                subBuilder.MergeFrom(Arbitru);
                            }
                            input.ReadMessage(subBuilder);
                            Arbitru = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            global::Triatlon.Protocol.Participant subBuilder = new global::Triatlon.Protocol.Participant();
                            if (payloadCase_ == PayloadOneofCase.Participant)
                            {
                                subBuilder.MergeFrom(Participant);
                            }
                            input.ReadMessage(subBuilder);
                            Participant = subBuilder;
                            break;
                        }
                    case 34:
                        {
                            global::Triatlon.Protocol.ParticipantDTO subBuilder = new global::Triatlon.Protocol.ParticipantDTO();
                            if (payloadCase_ == PayloadOneofCase.ParticipantDTO)
                            {
                                subBuilder.MergeFrom(ParticipantDTO);
                            }
                            input.ReadMessage(subBuilder);
                            ParticipantDTO = subBuilder;
                            break;
                        }
                    case 42:
                        {
                            global::Triatlon.Protocol.Proba subBuilder = new global::Triatlon.Protocol.Proba();
                            if (payloadCase_ == PayloadOneofCase.Proba)
                            {
                                subBuilder.MergeFrom(Proba);
                            }
                            input.ReadMessage(subBuilder);
                            Proba = subBuilder;
                            break;
                        }
                    case 50:
                        {
                            global::Triatlon.Protocol.Rezultat subBuilder = new global::Triatlon.Protocol.Rezultat();
                            if (payloadCase_ == PayloadOneofCase.Rezultat)
                            {
                                subBuilder.MergeFrom(Rezultat);
                            }
                            input.ReadMessage(subBuilder);
                            Rezultat = subBuilder;
                            break;
                        }
                    case 58:
                        {
                            global::Triatlon.Protocol.StringSS subBuilder = new global::Triatlon.Protocol.StringSS();
                            if (payloadCase_ == PayloadOneofCase.NameArbitru)
                            {
                                subBuilder.MergeFrom(NameArbitru);
                            }
                            input.ReadMessage(subBuilder);
                            NameArbitru = subBuilder;
                            break;
                        }
                    case 66:
                        {
                            global::Triatlon.Protocol.LonggSS subBuilder = new global::Triatlon.Protocol.LonggSS();
                            if (payloadCase_ == PayloadOneofCase.IdEntity)
                            {
                                subBuilder.MergeFrom(IdEntity);
                            }
                            input.ReadMessage(subBuilder);
                            IdEntity = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

        #region Nested types
        /// <summary>Container for nested types declared in the TriatlonRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Type
            {
                [pbr::OriginalName("Unkown")] Unkown = 0,
                [pbr::OriginalName("Login")] Login = 1,
                [pbr::OriginalName("Logout")] Logout = 2,
                [pbr::OriginalName("SendRezultat")] SendRezultat = 3,
                [pbr::OriginalName("getArbitrubyName")] GetArbitrubyName = 4,
                [pbr::OriginalName("getParticipantiDTO")] GetParticipantiDto = 5,
                [pbr::OriginalName("getProbaArbitrubyId")] GetProbaArbitrubyId = 6,
                [pbr::OriginalName("filterbyProba")] FilterbyProba = 7,
                [pbr::OriginalName("findParticipantByNumePrenume")] FindParticipantByNumePrenume = 8,
            }

        }
        #endregion

    }

    public sealed partial class TriatlonResponse : pb::IMessage<TriatlonResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<TriatlonResponse> _parser = new pb::MessageParser<TriatlonResponse>(() => new TriatlonResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TriatlonResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Triatlon.Protocol.TriatlonProtocolV3Reflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriatlonResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriatlonResponse(TriatlonResponse other) : this()
        {
            type_ = other.type_;
            error_ = other.error_;
            rezultat_ = other.rezultat_ != null ? other.rezultat_.Clone() : null;
            participantiiDTO_ = other.participantiiDTO_.Clone();
            arbitru_ = other.arbitru_ != null ? other.arbitru_.Clone() : null;
            rezultate_ = other.rezultate_.Clone();
            proba_ = other.proba_ != null ? other.proba_.Clone() : null;
            participant_ = other.participant_ != null ? other.participant_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriatlonResponse Clone()
        {
            return new TriatlonResponse(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Triatlon.Protocol.TriatlonResponse.Types.Type type_ = global::Triatlon.Protocol.TriatlonResponse.Types.Type.Unknown;
        /// <summary>
        /// Identifies which request is filled in.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.TriatlonResponse.Types.Type Type
        {
            get { return type_; }
            set
            {
                type_ = value;
            }
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 2;
        private string error_ = "";
        /// <summary>
        /// One of the following will be filled in, depending on the type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Error
        {
            get { return error_; }
            set
            {
                error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "rezultat" field.</summary>
        public const int RezultatFieldNumber = 3;
        private global::Triatlon.Protocol.Rezultat rezultat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Rezultat Rezultat
        {
            get { return rezultat_; }
            set
            {
                rezultat_ = value;
            }
        }

        /// <summary>Field number for the "participantiiDTO" field.</summary>
        public const int ParticipantiiDTOFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Triatlon.Protocol.ParticipantDTO> _repeated_participantiiDTO_codec
            = pb::FieldCodec.ForMessage(34, global::Triatlon.Protocol.ParticipantDTO.Parser);
        private readonly pbc::RepeatedField<global::Triatlon.Protocol.ParticipantDTO> participantiiDTO_ = new pbc::RepeatedField<global::Triatlon.Protocol.ParticipantDTO>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Triatlon.Protocol.ParticipantDTO> ParticipantiiDTO
        {
            get { return participantiiDTO_; }
        }

        /// <summary>Field number for the "arbitru" field.</summary>
        public const int ArbitruFieldNumber = 5;
        private global::Triatlon.Protocol.Arbitru arbitru_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Arbitru Arbitru
        {
            get { return arbitru_; }
            set
            {
                arbitru_ = value;
            }
        }

        /// <summary>Field number for the "rezultate" field.</summary>
        public const int RezultateFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Triatlon.Protocol.Rezultat> _repeated_rezultate_codec
            = pb::FieldCodec.ForMessage(50, global::Triatlon.Protocol.Rezultat.Parser);
        private readonly pbc::RepeatedField<global::Triatlon.Protocol.Rezultat> rezultate_ = new pbc::RepeatedField<global::Triatlon.Protocol.Rezultat>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Triatlon.Protocol.Rezultat> Rezultate
        {
            get { return rezultate_; }
        }

        /// <summary>Field number for the "proba" field.</summary>
        public const int ProbaFieldNumber = 7;
        private global::Triatlon.Protocol.Proba proba_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Proba Proba
        {
            get { return proba_; }
            set
            {
                proba_ = value;
            }
        }

        /// <summary>Field number for the "participant" field.</summary>
        public const int ParticipantFieldNumber = 8;
        private global::Triatlon.Protocol.Participant participant_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Triatlon.Protocol.Participant Participant
        {
            get { return participant_; }
            set
            {
                participant_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as TriatlonResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TriatlonResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            if (Error != other.Error) return false;
            if (!object.Equals(Rezultat, other.Rezultat)) return false;
            if (!participantiiDTO_.Equals(other.participantiiDTO_)) return false;
            if (!object.Equals(Arbitru, other.Arbitru)) return false;
            if (!rezultate_.Equals(other.rezultate_)) return false;
            if (!object.Equals(Proba, other.Proba)) return false;
            if (!object.Equals(Participant, other.Participant)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Type != global::Triatlon.Protocol.TriatlonResponse.Types.Type.Unknown) hash ^= Type.GetHashCode();
            if (Error.Length != 0) hash ^= Error.GetHashCode();
            if (rezultat_ != null) hash ^= Rezultat.GetHashCode();
            hash ^= participantiiDTO_.GetHashCode();
            if (arbitru_ != null) hash ^= Arbitru.GetHashCode();
            hash ^= rezultate_.GetHashCode();
            if (proba_ != null) hash ^= Proba.GetHashCode();
            if (participant_ != null) hash ^= Participant.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Type != global::Triatlon.Protocol.TriatlonResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (rezultat_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rezultat);
      }
      participantiiDTO_.WriteTo(output, _repeated_participantiiDTO_codec);
      if (arbitru_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Arbitru);
      }
      rezultate_.WriteTo(output, _repeated_rezultate_codec);
      if (proba_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Proba);
      }
      if (participant_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Type != global::Triatlon.Protocol.TriatlonResponse.Types.Type.Unknown)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (Error.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Error);
            }
            if (rezultat_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Rezultat);
            }
            participantiiDTO_.WriteTo(ref output, _repeated_participantiiDTO_codec);
            if (arbitru_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Arbitru);
            }
            rezultate_.WriteTo(ref output, _repeated_rezultate_codec);
            if (proba_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(Proba);
            }
            if (participant_ != null)
            {
                output.WriteRawTag(66);
                output.WriteMessage(Participant);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Type != global::Triatlon.Protocol.TriatlonResponse.Types.Type.Unknown)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (Error.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
            }
            if (rezultat_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rezultat);
            }
            size += participantiiDTO_.CalculateSize(_repeated_participantiiDTO_codec);
            if (arbitru_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arbitru);
            }
            size += rezultate_.CalculateSize(_repeated_rezultate_codec);
            if (proba_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proba);
            }
            if (participant_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TriatlonResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != global::Triatlon.Protocol.TriatlonResponse.Types.Type.Unknown)
            {
                Type = other.Type;
            }
            if (other.Error.Length != 0)
            {
                Error = other.Error;
            }
            if (other.rezultat_ != null)
            {
                if (rezultat_ == null)
                {
                    Rezultat = new global::Triatlon.Protocol.Rezultat();
                }
                Rezultat.MergeFrom(other.Rezultat);
            }
            participantiiDTO_.Add(other.participantiiDTO_);
            if (other.arbitru_ != null)
            {
                if (arbitru_ == null)
                {
                    Arbitru = new global::Triatlon.Protocol.Arbitru();
                }
                Arbitru.MergeFrom(other.Arbitru);
            }
            rezultate_.Add(other.rezultate_);
            if (other.proba_ != null)
            {
                if (proba_ == null)
                {
                    Proba = new global::Triatlon.Protocol.Proba();
                }
                Proba.MergeFrom(other.Proba);
            }
            if (other.participant_ != null)
            {
                if (participant_ == null)
                {
                    Participant = new global::Triatlon.Protocol.Participant();
                }
                Participant.MergeFrom(other.Participant);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Triatlon.Protocol.TriatlonResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            if (rezultat_ == null) {
              Rezultat = new global::Triatlon.Protocol.Rezultat();
            }
            input.ReadMessage(Rezultat);
            break;
          }
          case 34: {
            participantiiDTO_.AddEntriesFrom(input, _repeated_participantiiDTO_codec);
            break;
          }
          case 42: {
            if (arbitru_ == null) {
              Arbitru = new global::Triatlon.Protocol.Arbitru();
            }
            input.ReadMessage(Arbitru);
            break;
          }
          case 50: {
            rezultate_.AddEntriesFrom(input, _repeated_rezultate_codec);
            break;
          }
          case 58: {
            if (proba_ == null) {
              Proba = new global::Triatlon.Protocol.Proba();
            }
            input.ReadMessage(Proba);
            break;
          }
          case 66: {
            if (participant_ == null) {
              Participant = new global::Triatlon.Protocol.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Type = (global::Triatlon.Protocol.TriatlonResponse.Types.Type)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            Error = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            if (rezultat_ == null)
                            {
                                Rezultat = new global::Triatlon.Protocol.Rezultat();
                            }
                            input.ReadMessage(Rezultat);
                            break;
                        }
                    case 34:
                        {
                            participantiiDTO_.AddEntriesFrom(ref input, _repeated_participantiiDTO_codec);
                            break;
                        }
                    case 42:
                        {
                            if (arbitru_ == null)
                            {
                                Arbitru = new global::Triatlon.Protocol.Arbitru();
                            }
                            input.ReadMessage(Arbitru);
                            break;
                        }
                    case 50:
                        {
                            rezultate_.AddEntriesFrom(ref input, _repeated_rezultate_codec);
                            break;
                        }
                    case 58:
                        {
                            if (proba_ == null)
                            {
                                Proba = new global::Triatlon.Protocol.Proba();
                            }
                            input.ReadMessage(Proba);
                            break;
                        }
                    case 66:
                        {
                            if (participant_ == null)
                            {
                                Participant = new global::Triatlon.Protocol.Participant();
                            }
                            input.ReadMessage(Participant);
                            break;
                        }
                }
            }
        }
#endif

        #region Nested types
        /// <summary>Container for nested types declared in the TriatlonResponse message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Type
            {
                [pbr::OriginalName("Unknown")] Unknown = 0,
                [pbr::OriginalName("Ok")] Ok = 1,
                [pbr::OriginalName("Error")] Error = 2,
                [pbr::OriginalName("rezultatReceived")] RezultatReceived = 3,
                [pbr::OriginalName("getArbitrubyName")] GetArbitrubyName = 4,
                [pbr::OriginalName("getParticipantiDTO")] GetParticipantiDto = 5,
                [pbr::OriginalName("filterbyProba")] FilterbyProba = 6,
                [pbr::OriginalName("getProbaArbitrubyId")] GetProbaArbitrubyId = 7,
                [pbr::OriginalName("newRezultat")] NewRezultat = 8,
                [pbr::OriginalName("findParticipantByNumePrenume")] FindParticipantByNumePrenume = 9,
            }

        }
        #endregion

    }

    #endregion

}

#endregion Designer generated code
